1. Webpack可以看做是模块打包机：
它做的事情是，分析你的项目结构，
找到JavaScript模块(commonJs)以及其它的一些浏览器不能直接运行的拓展语言（Scss，jsx,.vue等），
并将其打包为合适的格式以供浏览器使用。

//webpack ,gulp 都是基于node 的第三方的产品

// webpack v4.0

    (1)npm install webpack webpack-cli --save-dev
    (2)package.json 
            webpack  --mode development(开发环境中) --watch
            webpack --mode production (生产环境)

    (3) 默认入口src/index.js  出口 dist/main.js


2.webpack.config.js

	entry: {
        index:__dirname + "/src/index.js"
    }, //已多次提及的唯一入口文件
    output: {
        path: __dirname + "/dist", //打包后的文件存放的地方
        filename: "[name].bundle.js",//打包后输出文件的文件名
        publicPath:"/dist/"   //webpack output is served from
    }

3.webpack-dev-server
	npm install --save-dev webpack-dev-server

	devServer: {
        inline:true,
        contentBase: "./",  //content not from webpack is serverd
        port: '8088',
        inline: true//实时刷新  
    },

    webpack-dev-server  --mode development

    (并不会生成dist 文件)

4. source-map 映射源代码， 方便调试 
    devtool: 'source-map'

5. loader -翻译机 - -针对一类文件处理 (需要单独安装)
        
        vue-loader    
        babel-loader ( ES6 -> ES5 ,react)   (babel-loader babel-core babel-preset-es2015)
        css-loader -->css 模块
        style-loader--> 将css 文件当成模块处理
        sass-loader(node-sass) -->scss 编译生成css文件
        file-loader (文件 copy  到目标文件夹)
        

commonJs 导入整个接口
es6 可以导入某几个接口，接口导入之后重命名，防止命名冲突问题。