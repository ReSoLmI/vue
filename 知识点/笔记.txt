VUE:
Vue 的核心库只关注视图层。
特点：
	Virtual DOM
	提供了响应式 (Reactive) 和组件化 (Composable) 的视图组件。
	将注意力集中保持在核心库，而将其他功能如路由和全局状态管理交给相关的库。


组件化的好处：
	组件化便于拆分更细致的工作，便于团队合作提高开发效率。
	

React和VUE。

思维模式：dom驱动---->数据驱动

1. 引入脚本
<script src="https://unpkg.com/vue"></script>

数据绑定的思想最早来源于angular。
前端开发世界来说，思想是共通。

2. {{表达式}}
有值的是表达式，1 + 2, a ? 1: 2
if else for switch 分支循环不算表达式

3. 指令
v-once：只渲染一次，值改变以后，不再重新渲染。节省性能。
v-html:
所有的innerHTML类的操作，都是危险操作。因为会造成跨站脚本攻击(XSS)
跨站脚本攻击的目的是为了盗取用户的cookie
经典的攻击案例是给管理员发送系统投诉。 
目前主流系统都会防护。
<script>alert(123)</script>
v-if：条件判断
v-bind：动态属性绑定
	v-bind 缩写成 :
v-on：事件绑定
	v-on 缩写成 @
修饰符，除了事件响应的行为之外，做一些附加操作。
	.stop 阻止冒泡
	.prevent 阻止默认行为。
	.capture 事件捕获
	.self 只有点击在自身才响应
	.once 只执行一次


4. 计算属性
计算属性拥有计算缓存，如果使用到的变量没有改变，则不需要重新运算。
相比普通的function提高了效率。

计算属性与watch相比，极大的节省了代码。

******只要能使用计算属性，就要使用。

知道计算属性有set方法就可以了。

双向绑定：
数据视图双向， MVVM框架。 
Model-view view-model
代表框架：
angular 1.x的绑定原理，脏值检测
Vue 通过Object.defineProperty拦截get set方法。 Vue框架不兼容IE8以下。

浏览器常用前缀：
-webkit- safari or chrome
-moz- 火狐
-o- 欧朋
-ms- IE

兼容移动端的噩梦机型：华为
兼容PC端的噩梦浏览器：IE8以下。

v-if是重新生成节点
v-show是切换css状态,页面性能开销比较小。

v-for 需要使用 :key="不重复的任意值" 来提高渲染性能


会改变原数组的方法叫做变异方法。明天考!!! 20遍或者10元红包或者加班晚11点
push()
pop()
shift()
unshift()
splice()
sort()
reverse()

坑（高级）
由于 JavaScript 的限制，Vue 不能检测以下变动的数组：
1. 当你利用索引直接设置一个项时，例如：vm.items[indexOfItem] = newValue
Vue.set(数组, 下标, 新的值)
2. 当你修改数组的长度时，例如：vm.items.length = newLength
解决方案：vm.items = vm.items.slice(0, n)
3. 所有用到的变量，必须在data中初始化

-------------------其他----------------------------------------
技术选型：
1.开源(注意开源协议) react开源协议。
2.大公司


开发成本占总成本的比例并不高，主要费用花在了运营上。
例如：app的每一次装机的成本10元左右

996: 早9晚9一周6天

开源协议：
MIT最安全。
LGPL：使用这个协议之后，整个软件自动变成LGPL协议。具有传染性。

oninput事件，监测录入的事件